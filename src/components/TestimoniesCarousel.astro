---
import TestimonyCard from '../components/TestimonyCard.astro';
import { getCollection } from 'astro:content';

const testimonials = await getCollection('testimonies');

// Ordena los testimonios por fecha (más reciente primero) y limita a 3
const sortedTestimonies = testimonials
	.sort(
		(a, b) =>
			new Date(b.data.date ?? 0).getTime() -
			new Date(a.data.date ?? 0).getTime()
	)
	.slice(0, 3);
---

<div class="relative flex h-[400px] max-w-full flex-col overflow-hidden">
	<div>
		<button
			class="absolute bottom-35 left-[10px] z-20 transform cursor-pointer border-0 text-[100px] text-neutral-600 opacity-50"
			id="prevButtonTestimoniesCarousel"
			aria-label="Botón anterior">‹</button
		>
	</div>

	<div
		class="ml-[calc(50%-180px)] flex h-full items-center gap-[4rem] transition-transform duration-300 ease-in-out"
		id="testimoniesCarouselWrapper"
	>
		{
			sortedTestimonies.map((testimony) => (
				<TestimonyCard testimony={testimony} />
			))
		}
	</div>
	<div>
		<button
			class="absolute right-[35px] bottom-35 z-20 transform cursor-pointer border-0 text-[100px] text-neutral-600 opacity-50"
			id="nextButtonTestimoniesCarousel"
			aria-label="Botón siguiente">›</button
		>
	</div>
</div>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const wrapper = document.getElementById('testimoniesCarouselWrapper');
		const items = Array.from(wrapper.children); // Obtiene los testimonios como un array
		let currentIndex = 0;
		const totalItems = items.length;
		const gap = 65; // Espaciado entre testimonios

		// Agregar clase a cada item
		items.forEach((item) => item.classList.add('testimonies-carousel__item'));

		const updateCarousel = () => {
			const itemWidth = items[0].offsetWidth;
			const offset = currentIndex * (itemWidth + gap);

			wrapper.style.transform = `translateX(-${offset}px)`;

			// Resaltar el testimonio en foco
			items.forEach((item, index) => {
				item.classList.toggle('focused', index === currentIndex);
			});
		};

		document
			.getElementById('nextButtonTestimoniesCarousel')
			.addEventListener('click', () => {
				currentIndex = (currentIndex + 1) % totalItems;
				updateCarousel();
			});

		document
			.getElementById('prevButtonTestimoniesCarousel')
			.addEventListener('click', () => {
				currentIndex = (currentIndex - 1 + totalItems) % totalItems;
				updateCarousel();
			});

		updateCarousel(); // Inicializar carrusel
	});
</script>

<style>
	.testimonies-carousel__item.focused {
		transform: scale(1.1);
		z-index: 1;
	}
</style>
